{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1eje9zILprgVmohMN7cKykI3fn4FBRPnF","timestamp":1718115028146}],"collapsed_sections":["8sNDnxE2-pwE","AG3FQEch-yuA","-4zq8Mza_D9O","VC6omXel_Up0"],"gpuType":"T4"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"3cbb7fRy-eyr"},"source":["# Artificial Neural Network"]},{"cell_type":"markdown","metadata":{"id":"8sNDnxE2-pwE"},"source":["### Importing the libraries"]},{"cell_type":"code","metadata":{"id":"lxChR1Rk-umf","executionInfo":{"status":"ok","timestamp":1718115162616,"user_tz":-330,"elapsed":3670,"user":{"displayName":"Sanjala R","userId":"01601586496942134949"}}},"source":["import numpy as np\n","import pandas as pd\n","import tensorflow as tf"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"id":"uBTqR3nacj0e","colab":{"base_uri":"https://localhost:8080/","height":36},"outputId":"df6fc54e-c13c-4c61-ac0f-c5d968c229fa","executionInfo":{"status":"ok","timestamp":1718115162617,"user_tz":-330,"elapsed":13,"user":{"displayName":"Sanjala R","userId":"01601586496942134949"}}},"source":["tf.__version__"],"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'2.15.0'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":2}]},{"cell_type":"markdown","metadata":{"id":"AG3FQEch-yuA"},"source":["## Part 1 - Data Preprocessing"]},{"cell_type":"markdown","metadata":{"id":"-4zq8Mza_D9O"},"source":["### Importing the dataset"]},{"cell_type":"code","metadata":{"id":"B9CV13Co_HHM","executionInfo":{"status":"ok","timestamp":1718115195460,"user_tz":-330,"elapsed":2109,"user":{"displayName":"Sanjala R","userId":"01601586496942134949"}}},"source":["dataset = pd.read_excel('Folds5x2_pp.xlsx')\n","X = dataset.iloc[:, :-1].values\n","y = dataset.iloc[:, -1].values"],"execution_count":3,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"VC6omXel_Up0"},"source":["### Splitting the dataset into the Training set and Test set"]},{"cell_type":"code","metadata":{"id":"L5edeb2r_agx","executionInfo":{"status":"ok","timestamp":1718115201288,"user_tz":-330,"elapsed":1144,"user":{"displayName":"Sanjala R","userId":"01601586496942134949"}}},"source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)"],"execution_count":4,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"_mSLlAT9_eyI"},"source":["## Part 2 - Building the ANN"]},{"cell_type":"markdown","metadata":{"id":"CsBULd_f_wLY"},"source":["### Initializing the ANN"]},{"cell_type":"code","metadata":{"id":"J6Hd97Ls__Nz","executionInfo":{"status":"ok","timestamp":1718115269142,"user_tz":-330,"elapsed":1584,"user":{"displayName":"Sanjala R","userId":"01601586496942134949"}}},"source":["ann = tf.keras.models.Sequential()"],"execution_count":5,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"iitAFJS_ABUn"},"source":["### Adding the input layer and the first hidden layer"]},{"cell_type":"code","metadata":{"id":"ksO_Vv40AHix","executionInfo":{"status":"ok","timestamp":1718115270992,"user_tz":-330,"elapsed":3,"user":{"displayName":"Sanjala R","userId":"01601586496942134949"}}},"source":["ann.add(tf.keras.layers.Dense(units=6, activation='relu'))"],"execution_count":6,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-lb4kK_wAKbs"},"source":["### Adding the second hidden layer"]},{"cell_type":"code","metadata":{"id":"c2357OqEAQOQ","executionInfo":{"status":"ok","timestamp":1718115277023,"user_tz":-330,"elapsed":664,"user":{"displayName":"Sanjala R","userId":"01601586496942134949"}}},"source":["ann.add(tf.keras.layers.Dense(units=6, activation='relu'))"],"execution_count":7,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"jwMOmKb3AdBY"},"source":["### Adding the output layer"]},{"cell_type":"code","metadata":{"id":"YFATpzsUAkLL","executionInfo":{"status":"ok","timestamp":1718115278920,"user_tz":-330,"elapsed":2,"user":{"displayName":"Sanjala R","userId":"01601586496942134949"}}},"source":["ann.add(tf.keras.layers.Dense(units=1))"],"execution_count":8,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"fq7e4fF6A1yy"},"source":["## Part 3 - Training the ANN"]},{"cell_type":"markdown","metadata":{"id":"qDeylAs2An25"},"source":["### Compiling the ANN"]},{"cell_type":"code","metadata":{"id":"pesgbWlCAtB4","executionInfo":{"status":"ok","timestamp":1718115502678,"user_tz":-330,"elapsed":1245,"user":{"displayName":"Sanjala R","userId":"01601586496942134949"}}},"source":["ann.compile(optimizer = 'adam', loss = 'mean_squared_error')"],"execution_count":9,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"YjVuiybYOo7r"},"source":["### Training the ANN model on the Training set"]},{"cell_type":"code","metadata":{"id":"c_vV-tiiA5zn","colab":{"base_uri":"https://localhost:8080/"},"outputId":"1353075f-a258-46bf-b9f1-17fd2dca8f46","executionInfo":{"status":"ok","timestamp":1718115588269,"user_tz":-330,"elapsed":83030,"user":{"displayName":"Sanjala R","userId":"01601586496942134949"}}},"source":["ann.fit(X_train, y_train, batch_size = 32, epochs = 100)"],"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","240/240 [==============================] - 3s 3ms/step - loss: 62601.1562\n","Epoch 2/100\n","240/240 [==============================] - 1s 3ms/step - loss: 523.5137\n","Epoch 3/100\n","240/240 [==============================] - 1s 3ms/step - loss: 422.8990\n","Epoch 4/100\n","240/240 [==============================] - 1s 4ms/step - loss: 347.4572\n","Epoch 5/100\n","240/240 [==============================] - 1s 4ms/step - loss: 288.4095\n","Epoch 6/100\n","240/240 [==============================] - 1s 4ms/step - loss: 232.3627\n","Epoch 7/100\n","240/240 [==============================] - 1s 3ms/step - loss: 183.6397\n","Epoch 8/100\n","240/240 [==============================] - 1s 3ms/step - loss: 144.1697\n","Epoch 9/100\n","240/240 [==============================] - 1s 3ms/step - loss: 114.5213\n","Epoch 10/100\n","240/240 [==============================] - 1s 3ms/step - loss: 93.6208\n","Epoch 11/100\n","240/240 [==============================] - 1s 3ms/step - loss: 77.4582\n","Epoch 12/100\n","240/240 [==============================] - 1s 3ms/step - loss: 64.8868\n","Epoch 13/100\n","240/240 [==============================] - 1s 3ms/step - loss: 55.5546\n","Epoch 14/100\n","240/240 [==============================] - 1s 3ms/step - loss: 47.9227\n","Epoch 15/100\n","240/240 [==============================] - 1s 3ms/step - loss: 41.4365\n","Epoch 16/100\n","240/240 [==============================] - 1s 3ms/step - loss: 37.3044\n","Epoch 17/100\n","240/240 [==============================] - 1s 3ms/step - loss: 34.1234\n","Epoch 18/100\n","240/240 [==============================] - 1s 3ms/step - loss: 32.4412\n","Epoch 19/100\n","240/240 [==============================] - 1s 3ms/step - loss: 30.7893\n","Epoch 20/100\n","240/240 [==============================] - 1s 3ms/step - loss: 30.0274\n","Epoch 21/100\n","240/240 [==============================] - 1s 3ms/step - loss: 29.7862\n","Epoch 22/100\n","240/240 [==============================] - 1s 3ms/step - loss: 28.9330\n","Epoch 23/100\n","240/240 [==============================] - 1s 4ms/step - loss: 28.5507\n","Epoch 24/100\n","240/240 [==============================] - 1s 4ms/step - loss: 28.1852\n","Epoch 25/100\n","240/240 [==============================] - 1s 4ms/step - loss: 29.0633\n","Epoch 26/100\n","240/240 [==============================] - 1s 3ms/step - loss: 28.6084\n","Epoch 27/100\n","240/240 [==============================] - 1s 3ms/step - loss: 28.1004\n","Epoch 28/100\n","240/240 [==============================] - 1s 3ms/step - loss: 28.6427\n","Epoch 29/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.1353\n","Epoch 30/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.1788\n","Epoch 31/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.3910\n","Epoch 32/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.1503\n","Epoch 33/100\n","240/240 [==============================] - 1s 3ms/step - loss: 26.9039\n","Epoch 34/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.3185\n","Epoch 35/100\n","240/240 [==============================] - 1s 3ms/step - loss: 28.2405\n","Epoch 36/100\n","240/240 [==============================] - 1s 3ms/step - loss: 28.0271\n","Epoch 37/100\n","240/240 [==============================] - 1s 3ms/step - loss: 28.3136\n","Epoch 38/100\n","240/240 [==============================] - 1s 3ms/step - loss: 26.9737\n","Epoch 39/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.4128\n","Epoch 40/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.4091\n","Epoch 41/100\n","240/240 [==============================] - 1s 4ms/step - loss: 27.0114\n","Epoch 42/100\n","240/240 [==============================] - 1s 4ms/step - loss: 27.5098\n","Epoch 43/100\n","240/240 [==============================] - 1s 4ms/step - loss: 27.8299\n","Epoch 44/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.5572\n","Epoch 45/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.7435\n","Epoch 46/100\n","240/240 [==============================] - 1s 3ms/step - loss: 28.6245\n","Epoch 47/100\n","240/240 [==============================] - 1s 3ms/step - loss: 28.0677\n","Epoch 48/100\n","240/240 [==============================] - 1s 3ms/step - loss: 28.5211\n","Epoch 49/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.2947\n","Epoch 50/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.0771\n","Epoch 51/100\n","240/240 [==============================] - 1s 3ms/step - loss: 28.5525\n","Epoch 52/100\n","240/240 [==============================] - 1s 3ms/step - loss: 28.1082\n","Epoch 53/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.2102\n","Epoch 54/100\n","240/240 [==============================] - 1s 3ms/step - loss: 28.4379\n","Epoch 55/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.2813\n","Epoch 56/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.7033\n","Epoch 57/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.7136\n","Epoch 58/100\n","240/240 [==============================] - 1s 3ms/step - loss: 28.1709\n","Epoch 59/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.8300\n","Epoch 60/100\n","240/240 [==============================] - 1s 4ms/step - loss: 28.0704\n","Epoch 61/100\n","240/240 [==============================] - 1s 4ms/step - loss: 27.2788\n","Epoch 62/100\n","240/240 [==============================] - 1s 4ms/step - loss: 26.7812\n","Epoch 63/100\n","240/240 [==============================] - 1s 4ms/step - loss: 27.1214\n","Epoch 64/100\n","240/240 [==============================] - 1s 4ms/step - loss: 27.6074\n","Epoch 65/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.3935\n","Epoch 66/100\n","240/240 [==============================] - 1s 3ms/step - loss: 28.4899\n","Epoch 67/100\n","240/240 [==============================] - 1s 3ms/step - loss: 28.3893\n","Epoch 68/100\n","240/240 [==============================] - 1s 3ms/step - loss: 28.3298\n","Epoch 69/100\n","240/240 [==============================] - 1s 3ms/step - loss: 26.7471\n","Epoch 70/100\n","240/240 [==============================] - 1s 3ms/step - loss: 28.0719\n","Epoch 71/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.6546\n","Epoch 72/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.2653\n","Epoch 73/100\n","240/240 [==============================] - 1s 3ms/step - loss: 26.9058\n","Epoch 74/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.2584\n","Epoch 75/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.7526\n","Epoch 76/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.9738\n","Epoch 77/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.7812\n","Epoch 78/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.4843\n","Epoch 79/100\n","240/240 [==============================] - 1s 4ms/step - loss: 27.5630\n","Epoch 80/100\n","240/240 [==============================] - 1s 4ms/step - loss: 27.0136\n","Epoch 81/100\n","240/240 [==============================] - 1s 4ms/step - loss: 27.5484\n","Epoch 82/100\n","240/240 [==============================] - 1s 3ms/step - loss: 28.0639\n","Epoch 83/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.7123\n","Epoch 84/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.7684\n","Epoch 85/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.1681\n","Epoch 86/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.0779\n","Epoch 87/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.3052\n","Epoch 88/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.6344\n","Epoch 89/100\n","240/240 [==============================] - 1s 3ms/step - loss: 28.1162\n","Epoch 90/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.6850\n","Epoch 91/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.3763\n","Epoch 92/100\n","240/240 [==============================] - 1s 3ms/step - loss: 26.8531\n","Epoch 93/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.5393\n","Epoch 94/100\n","240/240 [==============================] - 1s 3ms/step - loss: 29.2216\n","Epoch 95/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.1774\n","Epoch 96/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.6005\n","Epoch 97/100\n","240/240 [==============================] - 1s 3ms/step - loss: 27.3191\n","Epoch 98/100\n","240/240 [==============================] - 1s 4ms/step - loss: 27.8414\n","Epoch 99/100\n","240/240 [==============================] - 1s 4ms/step - loss: 27.6484\n","Epoch 100/100\n","240/240 [==============================] - 1s 4ms/step - loss: 27.8650\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x7bd0c71a2a70>"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","metadata":{"id":"0H0zKKNEBLD5"},"source":["### Predicting the results of the Test set"]},{"cell_type":"code","metadata":{"id":"IA0yApEmBG1X","colab":{"base_uri":"https://localhost:8080/"},"outputId":"06d7b7c2-7725-45e9-f4f2-ef83afd95c74","executionInfo":{"status":"ok","timestamp":1718115615912,"user_tz":-330,"elapsed":703,"user":{"displayName":"Sanjala R","userId":"01601586496942134949"}}},"source":["y_pred = ann.predict(X_test)\n","np.set_printoptions(precision=2)\n","print(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))"],"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["60/60 [==============================] - 0s 1ms/step\n","[[428.54 431.23]\n"," [459.51 460.01]\n"," [462.98 461.14]\n"," ...\n"," [470.2  473.26]\n"," [437.24 438.  ]\n"," [456.35 463.28]]\n"]}]}]}